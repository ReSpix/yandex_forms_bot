from aiogram.filters import Command
from aiogram.types import Message
from scheduler import update_scheduler
import re

from tgbot import dp, user_in_chat
from settings import CONFIG, save_config


@dp.message(Command("settime"))
async def set_time(message: Message):
    if not await user_in_chat(message):
        return
    pattern = r"^/settime (\d+):(\d+)$"
    text = message.text

    match = re.match(pattern, text)
    if match:
        x = match.group(1)
        y = match.group(2)
        if int(x) > 23 or int(x) < 0 or int(y) < 0 or int(y) > 59:
            await message.answer("–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
            return
        update_scheduler(int(x), int(y))
        await message.answer(f"üïì –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {x}:{y}")
    else:
        await message.answer(
            "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n/settime x:y\n\n–≥–¥–µ ¬´x¬ª —á–∞—Å—ã (–≤ 24 —á–∞—Å–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ), ¬´y¬ª –º–∏–Ω—É—Ç—ã"
        )


@dp.message(Command("setnotify"))
async def set_time(message: Message):
    if not await user_in_chat(message):
        return
    CONFIG["notify"] = not CONFIG["notify"]
    save_config(CONFIG)

    if CONFIG["notify"]:
        await message.answer(
            "üîî ‚úÖ\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–µ–∑ –æ—Ç–∫–ª–∏–∫–∞ —Ç–µ–ø–µ—Ä—å –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å.\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â–µ —Ä–∞–∑."
        )
    else:
        await message.answer(
            "üîî ‚ùå\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–µ–∑ –æ—Ç–∫–ª–∏–∫–∞ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å.\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â–µ —Ä–∞–∑."
        )


@dp.message(Command("setweekends"))
async def set_time(message: Message):
    if not await user_in_chat(message):
        return
    CONFIG["skip_weekends"] = not CONFIG["skip_weekends"]
    save_config(CONFIG)

    if CONFIG["skip_weekends"]:
        await message.answer(
            "üìÜ ‚ùå\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–µ–∑ –æ—Ç–∫–ª–∏–∫–∞ —Ç–µ–ø–µ—Ä—å –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ —Å—É–±–±–æ—Ç—É –∏ –≤–æ—Å–∫—Ä–µ–µ–Ω—å–µ.\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â–µ —Ä–∞–∑."
        )
    else:
        await message.answer(
            "üìÜ ‚úÖ\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–µ–∑ –æ—Ç–∫–ª–∏–∫–∞ —Ç–µ–ø–µ—Ä—å –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ —Å—É–±–±–æ—Ç—É –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ.\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â–µ —Ä–∞–∑."
        )

@dp.message(Command("showsettings"))
async def set_time(message: Message):
    if not await user_in_chat(message):
        return
    await message.answer(
f"""üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–µ–∑ –æ—Ç–∫–ª–∏–∫–∞: {'‚úÖ –í–∫–ª—é—á–µ–Ω—ã' if CONFIG['notify'] else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã'}
–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è /setnotify
        
üïì –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {CONFIG['hour']}:{CONFIG['minute']}
–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è /settime

üìÜ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –≤—ã—Ö–æ–¥–Ω—ã–º: {'‚úÖ –í–∫–ª—é—á–µ–Ω—ã' if not CONFIG['skip_weekends'] else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã'}
–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è /setweekends"""
    )